image: node:14

.global:
  before_script:
    - export TAGGED_APP_VERSION=fedo-admin-ui_`git describe --tags --always --abbrev=0`-`git rev-parse --short HEAD`
    - export VALID_PIPELINE_COMMIT_TITLE="/^([0-9]+)\.([0-9]+)\.([0-9]+)-(build|alpha|beta|rc).([0-9-]+)?$/"
    # - export AS_FEDO="sudo -H -u fedo-dev"
    - export SERVICE_NAME=admin.fedo.ai
    # - export DEPLOY_LOCATION_DEV=/home/fedo-dev/system-storage/www/dev.$SERVICE_NAME
    # - export DEPLOY_LOCATION_SIT=/home/fedo-dev/system-storage/www/sit.$SERVICE_NAME
    # - export DEPLOY_LOCATION_UAT=/home/fedo-dev/system-storage/www/uat.$SERVICE_NAME
    # - export RELEASE_LOCATION=/home/fedo-dev/system-storage/releases
    - export DEPLOY_LOCATION_PROD=/home/fedo-admin/system-storage/www/$SERVICE_NAME
    - export RELEASE_LOCATION_PROD=/home/fedo-admin/system-storage/releases
    - export AS_FEDO_PROD="sudo -H -u fedo-admin"
    - echo "Tagged version = "$TAGGED_APP_VERSION
  after_script:
    - echo "All stages complete"
 
stages:
  - build
  - test
  - e2e 
  - deploy

cache:
  paths:
    - dist/fedo-admin-ui
    - node_modules/

DEV-build:
  stage: build
  rules:
    # - if: '($CI_PIPELINE_SOURCE == "merge_request_event") && ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop") && $CI_COMMIT_TITLE =~ /^([0-9]+)\.([0-9]+)\.([0-9]+)-(build|alpha|beta|rc).([0-9-]+)?$/' 
  before_script:
    - !reference [.global, before_script]
  script:
    - npm ci
    - npm run build

  after_script:
    - !reference [.global, after_script]
  allow_failure: true

DEV-deploy:
  stage: deploy
  rules:
  # - if: '($CI_PIPELINE_SOURCE == "merge_request_event") && ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop") && ($CI_COMMIT_TITLE =~ /^([0-9]+)\.([0-9]+)\.([0-9]+)-(build|alpha|beta|rc).([0-9-]+)?$/)'
  before_script:
    - !reference [.global, before_script]
  script:
    # - if [[ $CI_COMMIT_TITLE =~ "build" || $CI_COMMIT_TITLE =~ "alpha" ||  $CI_COMMIT_TITLE =~ "beta" ||  $CI_COMMIT_TITLE =~ "rc" ]]; then
    # -     cd dist/fedo-admin-ui
    # # -     tar -czf $TAGGED_APP_VERSION.tar
    # -     tar -czf ../$TAGGED_APP_VERSION.tar * 
    # -     cd ..
    # -     chmod 400 $SSH_PRIVATE_KEY_HSA
    # -     scp -i $SSH_PRIVATE_KEY_HSA -o StrictHostKeyChecking=no $TAGGED_APP_VERSION.tar ubuntu@dev.services.fedo.health:~
    # -     ssh -i $SSH_PRIVATE_KEY_HSA -o StrictHostKeyChecking=no ubuntu@admin.dev.fedo.ai "$AS_FEDO cp $TAGGED_APP_VERSION.tar $RELEASE_LOCATION;cd $DEPLOY_LOCATION_DEV;$AS_FEDO rm -rf *;$AS_FEDO tar -xzf $RELEASE_LOCATION/$TAGGED_APP_VERSION.tar;"
    # - fi
    # - if [[ $CI_COMMIT_TITLE =~ "alpha" ||  $CI_COMMIT_TITLE =~ "beta" ||  $CI_COMMIT_TITLE =~ "rc" ]]; then
    # -     echo "deploying to SIT"
    # -     ssh -i $SSH_PRIVATE_KEY_HSA -o StrictHostKeyChecking=no ubuntu@admin.sit.fedo.ai "cd $DEPLOY_LOCATION_SIT;$AS_FEDO rm -rf *;$AS_FEDO tar -xzf $RELEASE_LOCATION/$TAGGED_APP_VERSION.tar;"
    # - fi
    # - if [[ $CI_COMMIT_TITLE =~ "beta" ||  $CI_COMMIT_TITLE =~ "rc" ]]; then
    # -     echo "deploying to uat / demo"
    # -     ssh -i $SSH_PRIVATE_KEY_HSA -o StrictHostKeyChecking=no ubuntu@dev.services.fedo.health "cd $DEPLOY_LOCATION_UAT;$AS_FEDO rm -rf *;$AS_FEDO tar -xzf $RELEASE_LOCATION/$TAGGED_APP_VERSION.tar;"
    # - fi
    - if [[ $CI_COMMIT_TITLE =~ "rc" ]]; then
    -     cd dist/fedo-admin-ui
    # -     tar -czf $TAGGED_APP_VERSION.tar
    -     tar -czf ../$TAGGED_APP_VERSION.tar * 
    -     cd ..
    -     echo "deploying to production / demo"
    -     chmod 400 $SSH_PRIVATE_KEY_HSA_PROD
    -     scp -i $SSH_PRIVATE_KEY_HSA -o StrictHostKeyChecking=no $TAGGED_APP_VERSION.tar ubuntu@admin.fedo.ai:~
    -     ssh -i $SSH_PRIVATE_KEY_HSA_PROD -o StrictHostKeyChecking=no ubuntu@admin.fedo.ai "cd $DEPLOY_LOCATION_PROD;$AS_FEDO rm -rf *;$AS_FEDO tar -xzf $RELEASE_LOCATION_PROD/$TAGGED_APP_VERSION.tar;"
    - fi
    - cd
    - rm -f $TAGGED_APP_VERSION.tar
  after_script:
    - !reference [.global, after_script]
  allow_failure: true
